package com.example.kotlincodechefcontesttrack

/**
 * Created by Venkhatesh on 26-05-2020.
 */

/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */


class R {
    object attr {
        /**
         *
         *Must be an integer value, such as "`100`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         */
        const val duration = 0x7f010003

        /**
         *
         *Must be a color value, in the form of "`#*rgb*`", "`#*argb*`",
         * "`#*rrggbb*`", or "`#*aarrggbb*`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         */
        const val holeFillColor = 0x7f010002

        /**
         *
         *Must be a reference to another resource, in the form "`@[+][*package*:]*type*:*name*`"
         * or to a theme attribute in the form "`?[*package*:][*type*:]*name*`".
         */
        const val icon = 0x7f010000

        /**
         *
         *Must be a color value, in the form of "`#*rgb*`", "`#*argb*`",
         * "`#*rrggbb*`", or "`#*aarrggbb*`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         */
        const val iconColor = 0x7f010001

        /**
         *
         *Must be a boolean value, either "`true`" or "`false`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         */
        const val removeFromParentOnEnd = 0x7f010004
    }

    object color {
        const val twitter_blue = 0x7f040001
        const val white = 0x7f040000
    }

    object drawable {
        const val content = 0x7f020000
        const val ic_launcher = 0x7f020001
        const val ic_twitter = 0x7f020002
    }

    object id {
        const val main_view = 0x7f070000
        const val splash_view = 0x7f070001
    }

    object layout {
        const val activity_main = 0x7f030000
    }

    object string {
        const val app_name = 0x7f050000
    }

    object style {
        /**
         * Base application theme, dependent on API level. This theme is replaced
         * by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
         *
         *
         * Theme customizations available in newer API levels can go in
         * res/values-vXX/styles.xml, while customizations related to
         * backward-compatibility can go here.
         *
         */
        const val AppBaseTheme = 0x7f060000

        /**  Application theme.
         * All customizations that are NOT specific to a particular API-level can go here.
         */
        const val AppTheme = 0x7f060001
    }

    object styleable {
        /** Attributes that can be used with a TwitterSplashView.
         *
         * Includes the following attributes:
         * <table>
         * <colgroup align="left"></colgroup>
         * <colgroup align="left"></colgroup>
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td>`[com.yildizkabaran.twittersplash:duration][.TwitterSplashView_duration]`</td><td></td></tr>
         * <tr><td>`[com.yildizkabaran.twittersplash:holeFillColor][.TwitterSplashView_holeFillColor]`</td><td></td></tr>
         * <tr><td>`[com.yildizkabaran.twittersplash:icon][.TwitterSplashView_icon]`</td><td></td></tr>
         * <tr><td>`[com.yildizkabaran.twittersplash:iconColor][.TwitterSplashView_iconColor]`</td><td></td></tr>
         * <tr><td>`[com.yildizkabaran.twittersplash:removeFromParentOnEnd][.TwitterSplashView_removeFromParentOnEnd]`</td><td></td></tr>
        </table> *
         * @see .TwitterSplashView_duration
         * @see .TwitterSplashView_holeFillColor
         * @see .TwitterSplashView_icon
         * @see .TwitterSplashView_iconColor
         * @see .TwitterSplashView_removeFromParentOnEnd
         */
        val TwitterSplashView = intArrayOf(
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004
        )

        /**
         *
         * This symbol is the offset where the [com.yildizkabaran.twittersplash.R.attr.duration]
         * attribute's value can be found in the [.TwitterSplashView] array.
         *
         *
         *
         * Must be an integer value, such as "`100`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         * @attr name com.yildizkabaran.twittersplash:duration
         */
        const val TwitterSplashView_duration = 3

        /**
         *
         * This symbol is the offset where the [com.yildizkabaran.twittersplash.R.attr.holeFillColor]
         * attribute's value can be found in the [.TwitterSplashView] array.
         *
         *
         *
         * Must be a color value, in the form of "`#*rgb*`", "`#*argb*`",
         * "`#*rrggbb*`", or "`#*aarrggbb*`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         * @attr name com.yildizkabaran.twittersplash:holeFillColor
         */
        const val TwitterSplashView_holeFillColor = 2

        /**
         *
         * This symbol is the offset where the [com.yildizkabaran.twittersplash.R.attr.icon]
         * attribute's value can be found in the [.TwitterSplashView] array.
         *
         *
         *
         * Must be a reference to another resource, in the form "`@[+][*package*:]*type*:*name*`"
         * or to a theme attribute in the form "`?[*package*:][*type*:]*name*`".
         * @attr name com.yildizkabaran.twittersplash:icon
         */
        const val TwitterSplashView_icon = 0

        /**
         *
         * This symbol is the offset where the [com.yildizkabaran.twittersplash.R.attr.iconColor]
         * attribute's value can be found in the [.TwitterSplashView] array.
         *
         *
         *
         * Must be a color value, in the form of "`#*rgb*`", "`#*argb*`",
         * "`#*rrggbb*`", or "`#*aarrggbb*`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         * @attr name com.yildizkabaran.twittersplash:iconColor
         */
        const val TwitterSplashView_iconColor = 1

        /**
         *
         * This symbol is the offset where the [com.yildizkabaran.twittersplash.R.attr.removeFromParentOnEnd]
         * attribute's value can be found in the [.TwitterSplashView] array.
         *
         *
         *
         * Must be a boolean value, either "`true`" or "`false`".
         *
         * This may also be a reference to a resource (in the form
         * "`@[*package*:]*type*:*name*`") or
         * theme attribute (in the form
         * "`?[*package*:][*type*:]*name*`")
         * containing a value of this type.
         * @attr name com.yildizkabaran.twittersplash:removeFromParentOnEnd
         */
        const val TwitterSplashView_removeFromParentOnEnd = 4
    }
}